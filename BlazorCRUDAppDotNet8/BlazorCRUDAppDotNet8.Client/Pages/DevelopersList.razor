@page "/developers-list"
@rendermode InteractiveServer
<div class="container">
    <div class="row">
        <div class="col-md-8">
            <div class="card">
                <div class="card">
                    <div class="card-header"> <button class="btn btn-primary float-end" @onclick="NavigateToAddDeveloperPage"> Add Developer </button></div>
                </div>

                @if(IsLoading)
                {
                    <p><em>Loading...</em></p>
                }
                else if (Developers == null || !Developers.Any())
                {
                    <div class="alert alert-info"> No Developers Available </div>
                }
                else
                {
                    <div class="card-header">
                        Developer List
                    </div>
                    <div class="card-body">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>First Name</th>
                                    <th>Last Name</th>
                                    <th>Email</th>
                                    <th>Experience</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var developer in Developers)
                                {
                                    <tr>
                                        <td>@developer.FirstName</td>
                                        <td>@developer.LastName</td>
                                        <td>@developer.Email</td>
                                        <th>@developer.Experience</th>
                                        <td>
                                            <div class="hstack gap-2">
                                                <button class="btn  btn-info" @onclick="()=>Edit(developer)"> Edit</button>
                                                <button class="btn  btn-danger" @onclick="() => Delete(developer.Id)"> Delete</button>

                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    private List<Developer> Developers { get; set; } = new();
    private bool IsLoading { get; set; } = true;

    private async Task LoadDevelopers()
    {
        IsLoading = true;
        var developers = await DeveloperService.GetAllDevelopers();
        Developers?.Clear();
        if (Developers is null) return;
        foreach (var developer in developers)
            Developers.Add(developer);
        IsLoading = false;
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadDevelopers();
    }

    private void NavigateToAddDeveloperPage()
    {
        NavigationManager.NavigateTo("manage-developer");
    }

    private void Edit(Developer model)
    {
        NavigationManager.NavigateTo($"manage-developer/{model.Id}");
    }



    private async Task Delete(Guid id)
    {
        var developer = await DeveloperService.DeleteDeveloper(id);
        await LoadDevelopers();
    }
}
